{"version":3,"sources":["components/Section/Section.module.css","components/Contacts/ContactsItem.module.css","components/Contacts/Contacts.module.css","components/Section/Section.jsx","store/actions.js","components/Form/Form.jsx","store/selectors.js","components/Filter/Filter.jsx","components/Contacts/ContactsItem.jsx","components/Contacts/Contacts.jsx","App.js","store/reducer.js","store/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","Section","text","className","children","s","Section__heading","addContact","createAction","name","number","payload","id","nanoid","deleteContact","changeFilter","connect","dispatch","onSubmit","contacts","useSelector","state","items","console","log","useState","setName","setNumber","findMap","find","contact","handleChange","e","target","value","reset","alert","preventDefault","Form","htmlFor","Form__item","Form__input","onChange","type","pattern","title","required","Form__button","getFilter","filter","getVisibleContacts","getContacts","normalizedFilter","toLowerCase","includes","ContactsItem","deleteFunc","ContactsItem__text","ContactsItem__button","onClick","onDeleteContact","Contacts","Contacts__list","length","Contacts__message","map","App","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","storeFile","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.59ea3dac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section__heading\":\"Section_Section__heading__17AbL\",\"Section\":\"Section_Section__19Tk0\",\"Phonebook\":\"Section_Phonebook__3EgW3 Section_Section__19Tk0\",\"Contacts\":\"Section_Contacts__1V2eZ Section_Section__19Tk0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsItem\":\"ContactsItem_ContactsItem__1QjrR\",\"ContactsItem__button\":\"ContactsItem_ContactsItem__button__3nWEj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contacts__list\":\"Contacts_Contacts__list__1QAJr\",\"Contacts__message\":\"Contacts_Contacts__message__bBbeZ\"};","import React from 'react';\nimport s from 'components/Section/Section.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Section({ text, className, children }) {\n  return (\n    <section className={(s.Section, s[className])}>\n      <h2 className={s.Section__heading}>{text}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  text: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.any,\n};\n\nexport { Section };\n","import { nanoid } from 'nanoid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    id: nanoid(),\n    name,\n    number,\n  },\n}));\n\nexport const deleteContact = createAction('contacts/delete');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\n// -----------\n// PLAIN REDUX\n// -----------\n// import { ADD, DELETE, CHANGE_FILTER } from './plain-redux-types';\n// import { nanoid } from 'nanoid';\n\n// export const addContact = ({ name, number }) => ({\n//   type: ADD,\n//   payload: {\n//     id: nanoid(),\n//     name,\n//     number,\n//   },\n// });\n\n// export const deleteContact = contactId => ({\n//   type: DELETE,\n//   payload: contactId,\n// });\n// export const changeFilter = value => ({ type: CHANGE_FILTER, payload: value });\n","import React, { useState } from 'react';\nimport { Section } from 'components/Section/Section';\nimport s from 'components/Form/Form.module.css';\nimport PropTypes from 'prop-types';\nimport { connect, useSelector } from 'react-redux';\nimport { addContact } from 'store/actions';\n\nfunction Form({ onSubmit }) {\n  const contacts = useSelector(state => state.contacts.items);\n  console.log(contacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const findMap = contacts.find(contact => contact.name === name);\n\n  const handleSubmit = e => {\n    if (findMap) {\n      alert(`${name} is already in contacts!`);\n      return;\n    } else {\n      e.preventDefault();\n      onSubmit({ name, number });\n      reset();\n    }\n  };\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Section className=\"Phonebook\" text=\"Phonebook\">\n      <form onSubmit={handleSubmit} className={s.Form}>\n        <label htmlFor=\"input-name\" className={s.Form__item}>\n          Name\n        </label>\n        <input\n          className={s.Form__input}\n          id=\"input-name\"\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <label htmlFor=\"input-tel\" className={s.Form__item}>\n          Phone number\n        </label>\n        <input\n          onChange={handleChange}\n          className={s.Form__input}\n          id=\"input-tel\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n\n        <button type=\"submit\" className={s.Form__button}>\n          Add contact\n        </button>\n      </form>\n    </Section>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n  className: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) => dispatch(addContact({ name, number })),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","export const getFilter = state => state.contacts.filter;\n\nconst getContacts = state => state.contacts.items;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeFilter } from 'store/actions';\nimport { getFilter } from '../../store/selectors';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label htmlFor=\"search\">\n      Find contacts by name\n      <input id=\"search\" type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({ value: getFilter(state) });\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport s from 'components/Contacts/ContactsItem.module.css';\nimport PropTypes from 'prop-types';\n\nfunction ContactsItem({ id, name, number, deleteFunc }) {\n  return (\n    <li key={id} className={s.ContactsItem}>\n      <span className={s.ContactsItem__text}>\n        {name}: {number}\n      </span>\n      <button\n        type=\"button\"\n        className={s.ContactsItem__button}\n        onClick={() => deleteFunc(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactsItem.propTypes = {\n  id: PropTypes.string,\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string,\n  deleteFunc: PropTypes.func.isRequired,\n};\n\nexport { ContactsItem };\n","import React from 'react';\nimport { Section } from 'components/Section/Section';\nimport { ContactsItem } from './ContactsItem';\nimport s from 'components/Contacts/Contacts.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../store/actions';\nimport { getVisibleContacts } from 'store/selectors';\n\nfunction Contacts({ contacts, onDeleteContact }) {\n  return (\n    <Section className={s.Contacts} text=\"Contacts\">\n      <ul className={s.Contacts__list}>\n        {contacts.length === 0 ? (\n          <h3 className={s.Contacts__message}>Nothing is here</h3>\n        ) : (\n          contacts.map(({ name, id, number }) => (\n            <ContactsItem\n              deleteFunc={() => onDeleteContact(id)}\n              name={name}\n              key={id}\n              number={number}\n            />\n          ))\n        )}\n      </ul>\n    </Section>\n  );\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n  name: PropTypes.string,\n  id: PropTypes.string,\n  number: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n  contacts: getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import './App.css';\nimport React from 'react';\nimport Form from 'components/Form/Form';\nimport Filter from 'components/Filter/Filter';\nimport Contacts from 'components/Contacts/Contacts';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n      <Filter />\n      <Contacts />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, changeFilter } from './actions';\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ items, filter });\n\n// -----------\n// PLAIN REDUX\n// -----------\n\n// import { ADD, DELETE, CHANGE_FILTER } from './plain-redux-types';\n// import { combineReducers } from 'redux';\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case ADD:\n//       return [...state, payload];\n//     case DELETE:\n//       return state.filter(contact => contact.id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case [changeFilter.type]:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport reducer from './reducer';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, reducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nconst storeFile = { store, persistor };\n\nexport default storeFile;\n// -----------\n// PLAIN REDUX\n// -----------\n\n// import { createStore, combineReducers } from '@reduxjs/toolkit';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import contacts from './reducer';\n\n// const rootReducer = combineReducers({ contacts });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// export default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport storeFile from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={storeFile.store}>\n      <PersistGate\n        loading=\"downloading data...\"\n        persistor={storeFile.persistor}\n      >\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__3drdy\",\"Form__item\":\"Form_Form__item__38WD_\",\"Form__input\":\"Form_Form__input__2vog0\"};"],"sourceRoot":""}